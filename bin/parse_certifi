#!/usr/bin/env python
"""
pip instal certifi
"""
from os.path import basename
import json
from binascii import hexlify
from pathlib import Path
from OpenSSL.crypto import FILETYPE_PEM, load_certificate
from datetime import datetime
from cryptography.x509 import Certificate, extensions

STORE_PATH = '.venv/lib/python3.10/site-packages/certifi/cacert.pem'
BEGIN = '-----BEGIN CERTIFICATE-----'
END = '-----END CERTIFICATE-----'
FINGERPRINT_REF = '# SHA1 Fingerprint: '

def get_ski(cert :Certificate) -> str:
    for ext in cert.extensions:
        if isinstance(ext.value, extensions.SubjectKeyIdentifier):
            return hexlify(ext.value.digest).decode('utf-8')

if __name__ == '__main__':
    handle = Path(STORE_PATH)
    if not handle.is_file():
        print(f"file {STORE_PATH} doesn't exist")
        exit(1)
    certs = {}
    current_key = None
    pem_lines = ''
    for line in handle.read_text().splitlines():
        if current_key is None and line.startswith(FINGERPRINT_REF):
            current_key = line.replace(FINGERPRINT_REF, '').replace(':', '').upper()
            continue
        if current_key is not None and not pem_lines and line.startswith(BEGIN):
            pem_lines += BEGIN + '\n'
            continue
        if current_key is not None and pem_lines and line.startswith(END):
            pem_lines += END
            certs[current_key] = pem_lines
            current_key = None
            pem_lines = ''
            continue
        if current_key is not None and pem_lines:
            pem_lines += line + '\n'

    now = datetime.utcnow()
    lookup = {}
    untrusted_ski = set()
    for fingerprint, pem in certs.items():
        cert = load_certificate(FILETYPE_PEM, pem)
        try:
            ca_ski = get_ski(cert.to_cryptography())
            if ca_ski:
                lookup[ca_ski] = pem
            not_before = cert.to_cryptography().not_valid_before
            not_after = cert.to_cryptography().not_valid_after
        except ValueError:
            if ca_ski:
                untrusted_ski.add(ca_ski)
            continue
        if now < not_before or now > not_after:
            untrusted_ski.add(ca_ski)

    untrusted_ski = sorted(list(filter(None, untrusted_ski)))
    store_path = Path('src/tlstrust/stores/certifi.py')
    store_path.write_text(f'''"""
Do not modify by hand
Generated by: bin/{basename(__file__)}
"""

__module__ = 'tlstrust.stores.certifi'
__version__ = 'certifi==2021.10.8'
__description__ = 'Various libraries that use certifi may include various versions, but should keep certifi updated with each new release'

UNTRUSTED = {json.dumps(untrusted_ski, indent=4, ensure_ascii=False)}
PEM_FILES = {json.dumps(lookup, sort_keys=True, indent=4, ensure_ascii=False)}
''')
