#!/usr/bin/env python
"""
Generated from: https://www.ccadb.org/resources
"""
from os.path import basename
from contextlib import closing
import csv
from io import StringIO
from datetime import datetime
import json
from binascii import hexlify
from pathlib import Path
from OpenSSL.crypto import FILETYPE_PEM, load_certificate
from cryptography.x509 import Certificate, extensions
import requests

DATE_FMT = "%Y.%m.%d"
REMOTE_CSV = "https://ccadb-public.secure.force.com/mozilla/IncludedRootsDistrustTLSSSLPEMCSV?TrustBitsInclude=Websites"

def get_ski(certificate :Certificate) -> str:
    for ext in certificate.extensions:
        if isinstance(ext.value, extensions.SubjectKeyIdentifier):
            return hexlify(ext.value.digest).decode("utf-8")


if __name__ == "__main__":
    untrusted_ski = set()
    lookup = {}
    with closing(requests.get(REMOTE_CSV, stream=True, allow_redirects=True)) as r:
        buff = StringIO(r.text)
    now = datetime.utcnow()
    for item in csv.DictReader(buff, delimiter=",", quotechar="\""):
        pem = item.get("PEM")
        if not pem:
            continue
        pem = pem.replace("'-",'-').replace("-'",'-')
        try:
            cert = load_certificate(FILETYPE_PEM, pem.replace("'-",'-').replace("-'",'-'))
            ca_ski = get_ski(cert.to_cryptography())
            if ca_ski:
                lookup[ca_ski] = pem
        except Exception:
            if ca_ski:
                untrusted_ski.add(ca_ski)
            continue
        distrust_after = item.get("Distrust for TLS After Date")
        if distrust_after:
            distrust_after_date = datetime.strptime(distrust_after, DATE_FMT)
            if now > distrust_after_date:
                untrusted_ski.add(ca_ski)
        try:
            not_before = cert.to_cryptography().not_valid_before
            not_after = cert.to_cryptography().not_valid_after
        except ValueError:
            untrusted_ski.add(ca_ski)
        if now < not_before or now > not_after:
            untrusted_ski.add(ca_ski)

    untrusted_ski = sorted(list(filter(None, untrusted_ski)))
    store_path = Path("src/tlstrust/stores/ccadb.py")
    store_path.write_text(f'''"""
Do not modify by hand
Generated by: bin/{basename(__file__)}
"""

__module__ = "tlstrust.stores.ccadb"
__version__ = "{datetime.utcnow().strftime("%Y.%m.%d")}"
__description__ = 'The version is the date last generated from ccadb.org, it is not versioned and updates are available in an unspecified "timely fashion" as changes are submitted by issuers'

UNTRUSTED = {json.dumps(untrusted_ski, indent=4, ensure_ascii=False)}
PEM_FILES = {json.dumps(lookup, sort_keys=True, indent=4, ensure_ascii=False)}
''', encoding="utf8")
