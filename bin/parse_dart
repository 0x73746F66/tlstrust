#!/usr/bin/env python
"""
Generated from: https://github.com/dart-lang/root_certificates
"""
from os.path import basename
from contextlib import closing
from datetime import datetime
import json
from binascii import hexlify
from pathlib import Path
from OpenSSL.crypto import FILETYPE_PEM, load_certificate
from cryptography.x509 import Certificate, extensions
import requests

REMOTE_CACERTS = "https://raw.githubusercontent.com/dart-lang/root_certificates/master/certdata.pem"
BEGIN = "-----BEGIN CERTIFICATE-----"
END = "-----END CERTIFICATE-----"

def split_bundle(raw:str) -> list:
    certs = []
    current = ''
    tracking = False
    for line in raw.splitlines():
        if line.startswith('#'):
            continue
        new_line = line.strip()
        if new_line == BEGIN:
            tracking = True
        if tracking and new_line:
            current += f"{new_line}\n"
        if tracking and new_line == END:
            certs.append(current)
            current = ''
            tracking = False

    return certs


def get_ski(certificate: Certificate) -> str:
    for ext in certificate.extensions:
        if isinstance(ext.value, extensions.SubjectKeyIdentifier):
            return hexlify(ext.value.digest).decode("utf-8")


def main():
    untrusted_ski = set()
    lookup = {}
    with closing(requests.get(REMOTE_CACERTS, stream=True, allow_redirects=True)) as buff:
        bundle = buff.text

    now = datetime.utcnow()
    for pem in split_bundle(bundle):
        ca_ski = None
        try:
            cert = load_certificate(FILETYPE_PEM, pem)
            ca_ski = get_ski(cert.to_cryptography())
            if ca_ski:
                lookup[ca_ski] = pem
        except Exception:
            if ca_ski:
                untrusted_ski.add(ca_ski)
            continue
        try:
            not_before = cert.to_cryptography().not_valid_before
            not_after = cert.to_cryptography().not_valid_after
        except ValueError:
            untrusted_ski.add(ca_ski)
        if now < not_before or now > not_after:
            untrusted_ski.add(ca_ski)

    untrusted_ski = sorted(list(filter(None, untrusted_ski)))
    store_path = Path("src/tlstrust/stores/dart.py")
    store_path.write_text(
        f'''"""
Do not modify by hand
Generated by: bin/{basename(__file__)}
"""

__module__ = "tlstrust.stores.dart"
__version__ = "{datetime.utcnow().strftime("%Y.%m.%d")}"
__description__ = 'The version is the date last generated from github.com/dart-lang/root_certificates, it is not versioned and updates are available in an unspecified "timely fashion" as changes are submitted by maintainers'

UNTRUSTED = {json.dumps(untrusted_ski, indent=4, ensure_ascii=False)}
PEM_FILES = {json.dumps(lookup, sort_keys=True, indent=4, ensure_ascii=False)}
''',
        encoding="utf8",
    )


if __name__ == "__main__":
    main()
