#!/usr/bin/env python3
"""
keytool -list -keystore /etc/ssl/certs/java/cacerts
yes "" | sudo keytool -keystore /etc/ssl/certs/java/cacerts -exportcert -rfc -alias debian:ac_raiz_fnmt-rcm.pem -file .data/java/ac_raiz_fnmt-rcm.pem
Last Updated: 2021-10-20
"""
from os.path import basename
import json
import hashlib
from pathlib import Path
from OpenSSL.crypto import FILETYPE_ASN1, X509, FILETYPE_PEM, load_certificate, dump_certificate
from datetime import datetime

STORE_PATH = '.data/java'
PREFIX = 'fingerprint_'

def get_module_fingerprints(file_content :str) -> list[str]:
    fingerprints = set()
    for line in file_content.splitlines():
        if not line.startswith(PREFIX):
            continue
        variable_name, *rest = line.split(' = ')
        fingerprint = variable_name.replace(PREFIX, '')
        fingerprints.add(fingerprint)
    return list(fingerprints)

def save_reference_certificate(fingerprint :str, cert :X509):
    module_path = './src/tlstrust/certificates.py'
    filepath = Path(module_path)
    if not filepath.is_file():
        raise OSError(module_path)
    lookup = get_module_fingerprints(filepath.read_text())
    pem = dump_certificate(FILETYPE_PEM, cert)
    if fingerprint not in lookup:
        with filepath.open("a", encoding='utf8') as f:
            f.write(f'{PREFIX}{fingerprint} = """{pem.decode("utf8")}"""\n')

if __name__ == '__main__':
    handle = Path(STORE_PATH)
    if not handle.is_dir():
        print(f"directory {STORE_PATH} doesn't exist")
        exit(1)

    now = datetime.utcnow()
    issuers = set()
    fingerprints = set()
    for path in handle.glob('*.pem'):
        cert = load_certificate(FILETYPE_PEM, path.read_bytes())
        try:
            not_before = cert.to_cryptography().not_valid_before
            not_after = cert.to_cryptography().not_valid_after
        except ValueError:
            continue
        if now < not_before or now > not_after:
            continue
        der = dump_certificate(FILETYPE_ASN1, cert)
        fingerprint = hashlib.sha1(der).hexdigest().upper()
        save_reference_certificate(fingerprint, cert)
        issuers.add(cert.get_issuer().CN)
        fingerprints.add(fingerprint)
    issuers = list(filter(None, issuers))
    store_path = Path('src/tlstrust/stores/java.py')
    store_path.write_text(f'''"""
Do not modify by hand
Generated by: bin/{basename(__file__)}
"""

__module__ = 'tlstrust.stores.java'

SHA1_FINGERPRINTS = {json.dumps(list(fingerprints), sort_keys=True, indent=4, ensure_ascii=False)}
COMMON_NAMES = {json.dumps(issuers, sort_keys=True, indent=4, ensure_ascii=False)}
''')
