#!/usr/bin/env python3
"""
Last Updated: 2021-12-12
"""
from os.path import basename
import json
import subprocess
from binascii import hexlify
from pathlib import Path
from OpenSSL.crypto import FILETYPE_PEM, load_certificate
from datetime import datetime
from cryptography.x509 import Certificate, extensions

STORE_PATH = '/etc/ssl/certs'

def get_version():
    return subprocess.run(["uname", "-r"], capture_output=True, check=False).stdout.decode().strip()

def get_ski(cert :Certificate) -> str:
    for ext in cert.extensions:
        if isinstance(ext.value, extensions.SubjectKeyIdentifier):
            return hexlify(ext.value.digest).decode('utf-8')

if __name__ == '__main__':
    lookup = {}
    untrusted_ski = set()
    handle = Path(STORE_PATH)
    if not handle.is_dir():
        print(f"directory {STORE_PATH} doesn't exist")
        exit(1)
    now = datetime.utcnow()
    for path in handle.glob('*.pem'):
        pem = path.read_bytes()
        cert = load_certificate(FILETYPE_PEM, pem)
        try:
            ca_ski = get_ski(cert.to_cryptography())
            if ca_ski:
                lookup[ca_ski] = pem.decode()
            not_before = cert.to_cryptography().not_valid_before
            not_after = cert.to_cryptography().not_valid_after
        except ValueError:
            if ca_ski:
                untrusted_ski.add(ca_ski)
            continue
        if now < not_before or now > not_after:
            untrusted_ski.add(ca_ski)

    untrusted_ski = sorted(list(filter(None, untrusted_ski)))
    store_path = Path('src/tlstrust/stores/linux.py')
    store_path.write_text(f'''"""
Do not modify by hand
Generated by: bin/{basename(__file__)}
"""

__module__ = 'tlstrust.stores.linux'
__version__ = '{get_version()}'
__description__ = 'Various severs will be built with different version'

UNTRUSTED = {json.dumps(untrusted_ski, indent=4, ensure_ascii=False)}
PEM_FILES = {json.dumps(lookup, sort_keys=True, indent=4, ensure_ascii=False)}
''')
