#!/usr/bin/env python3
"""
Generated from: https://android.googlesource.com/platform/system/ca-certificates/+/master/files/
"""
from os.path import basename
import json
from pathlib import Path
from OpenSSL.crypto import FILETYPE_PEM, load_certificate
from datetime import datetime
import requests
from contextlib import closing
import tarfile

REMOTE_TARBALL = 'https://android.googlesource.com/platform/system/ca-certificates/+archive/master/files.tar.gz'
STORE_PATH = '.data/android'

if __name__ == '__main__':
    with closing(requests.get(REMOTE_TARBALL, stream=True, allow_redirects=True)) as r:
        file = tarfile.open(fileobj=r.raw, mode="r|gz")
        file.extractall(path=STORE_PATH)

    untrusted = set()
    handle = Path(STORE_PATH)
    if not handle.is_dir():
        print(f"directory {STORE_PATH} doesn't exist")
        exit(1)
    now = datetime.utcnow()
    lookup = {}
    for path in handle.glob('*.0'):
        pem = path.read_bytes()
        cert = load_certificate(FILETYPE_PEM, pem)
        ca_common_name = cert.get_issuer().commonName
        if ca_common_name:
            lookup[ca_common_name] = pem.decode()
        try:
            not_before = cert.to_cryptography().not_valid_before
            not_after = cert.to_cryptography().not_valid_after
        except ValueError:
            untrusted.add(ca_common_name)
        if now < not_before or now > not_after:
            untrusted.add(ca_common_name)

    untrusted = sorted(list(filter(None, untrusted)))
    store_path = Path('src/tlstrust/stores/android.py')
    store_path.write_text(f'''"""
Do not modify by hand
Generated by: bin/{basename(__file__)}
"""

__module__ = 'tlstrust.stores.android'

UNTRUSTED = {json.dumps(untrusted, indent=4, ensure_ascii=False)}
PEM_FILES = {json.dumps(lookup, sort_keys=True, indent=4, ensure_ascii=False)}
''')
